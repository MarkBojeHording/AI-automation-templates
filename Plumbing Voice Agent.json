{
  "name": "Plumbing Voice Agent",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/voice-invoice",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "aeb9a81e-e1c1-4e49-a10a-aeab5c3dadc4",
      "name": "Receive Voice Recording - Webhook",
      "webhookId": "ecc2458c-2a88-453c-a239-838f2ddf5a22"
    },
    {
      "parameters": {
        "jsCode": "const audioData = items[0].json.body.audio;\n\nif (!audioData) {\n  throw new Error('No audio data found');\n}\n\nconst audioBuffer = Buffer.from(audioData, 'base64');\n\nreturn [{\n  json: {},\n  binary: {\n    'audio.webm': {\n      data: audioBuffer,\n      mimeType: 'audio/webm',\n      fileName: 'audio.webm'\n    }\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        0
      ],
      "id": "20f03051-15dc-4c31-b96a-4868b94712ef",
      "name": "Process Audio Input"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "audio.webm",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        416,
        0
      ],
      "id": "36507a9c-e629-45a3-b349-a3e9cda18df6",
      "name": "Convert Speech To Text",
      "credentials": {
        "openAiApi": {
          "id": "5hXGlcMbU6Ps8uxE",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get OpenAI API key from n8n credentials\nconst openaiApiKey = this.getCredentials('openAi').apiKey;\n\n// Get transcribed text from Whisper node\nconst transcribedText = items[0].json.text || items[0].json.transcription;\n\n// Get document type from original webhook data - check multiple locations\nconst webhookData = $node[\"Receive Voice Recording - Webhook\"].json;\n\n// Check different possible locations for document_type\nconst documentType = \n  webhookData.document_type || \n  webhookData.body?.document_type || \n  webhookData.query?.document_type || \n  'invoice';\n\n// EXTENSIVE DEBUG: Show everything we have access to\nconsole.log(\"=== WEBHOOK DEBUG ===\");\nconsole.log(\"Full webhook data:\", JSON.stringify(webhookData, null, 2));\nconsole.log(\"Webhook keys:\", Object.keys(webhookData));\nif (webhookData.body) {\n  console.log(\"Webhook body keys:\", Object.keys(webhookData.body));\n  console.log(\"Body document_type:\", webhookData.body.document_type);\n}\nconsole.log(\"Final document_type used:\", documentType);\nconsole.log(\"=== WHISPER DEBUG ===\");\nconsole.log(\"Whisper output keys:\", Object.keys(items[0].json));\n\nif (!transcribedText) {\n  throw new Error('No transcribed text found');\n}\n\n// OpenAI API call to extract structured data\nconst openaiResponse = await this.helpers.httpRequest({\n  method: 'POST',\n  url: 'https://api.openai.com/v1/chat/completions',\n  headers: {\n    'Authorization': `Bearer ${openaiApiKey}`,\n    'Content-Type': 'application/json'\n  },\n  body: {\n    model: 'gpt-4',\n    messages: [{\n      role: 'system',\n      content: `You are a plumbing data extraction assistant. Extract structured data from voice transcriptions.\nWhen extracting costs, always capture the FULL dollar amount mentioned (e.g., if they say \"twenty dollars\", return 20, not 2).\nReturn ONLY valid JSON in this exact format:\n{\n  \"customer_name\": \"string or null\",\n  \"customer_address\": \"string or null\", \n  \"job_description\": \"string\",\n  \"materials_cost\": 0,\n  \"labor_hours\": 0,\n  \"labor_rate\": 85\n}`\n    }, {\n      role: 'user',\n      content: `Extract plumbing job data from: \"${transcribedText}\"`\n    }],\n    temperature: 0.1\n  }\n});\n\nconst extractedData = JSON.parse(openaiResponse.choices[0].message.content);\n\n// Calculate Australian plumbing rates and GST - with number parsing\nconst laborRate = parseFloat(extractedData.labor_rate) || 85;\nconst laborHours = parseFloat(extractedData.labor_hours) || 0;\nconst materialsCost = parseFloat(extractedData.materials_cost) || 0;\n\nconst laborCost = laborHours * laborRate;\nconst subtotal = materialsCost + laborCost;\nconst gstAmount = subtotal * 0.10; // 10% GST in Australia\nconst totalAmount = subtotal + gstAmount;\n\n// Add calculated fields - ensuring all are numbers\nextractedData.materials_cost = materialsCost;\nextractedData.labor_hours = laborHours;\nextractedData.labor_cost = laborCost;\nextractedData.subtotal = subtotal;\nextractedData.gst_amount = gstAmount;\nextractedData.total_amount = totalAmount;\n\n// FINAL: Use the document type from original webhook\nextractedData.document_type = documentType;\n\nreturn [{\n  json: {\n    transcription: transcribedText,\n    extracted_data: extractedData,\n    timestamp: new Date().toISOString(),\n    DEBUG: {\n      webhook_full_data: webhookData,\n      webhook_body: webhookData.body || null,\n      received_document_type: webhookData.document_type,\n      received_body_document_type: webhookData.body?.document_type,\n      final_document_type: extractedData.document_type,\n      whisper_keys: Object.keys(items[0].json)\n    }\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        624,
        0
      ],
      "id": "bd7fe3ae-3498-4611-b2e6-e8f3b98fab6c",
      "name": "Extract Invoice Data"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appC3ixE5VdOB3ySz",
          "mode": "list",
          "cachedResultName": "Plumbing Jobs",
          "cachedResultUrl": "https://airtable.com/appC3ixE5VdOB3ySz"
        },
        "table": {
          "__rl": true,
          "value": "tbli5cGxLvBC4teMM",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appC3ixE5VdOB3ySz/tbli5cGxLvBC4teMM"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "customer_name": "={{$json[\"extracted_data\"][\"customer_name\"] || \"No customer name\"}}",
            "customer_address": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"customer_address\"]}}",
            "job_description": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"job_description\"]}}",
            "materials_cost": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"materials_cost\"]}}",
            "labor_hours": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"labor_hours\"]}}",
            "labor_cost": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"labor_cost\"]}}",
            "subtotal": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"subtotal\"]}}",
            "gst_amount": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"gst_amount\"]}}",
            "total_amount": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"total_amount\"]}}",
            "document_type": "={{$node[\"Extract Invoice Data\"].json[\"extracted_data\"][\"document_type\"].split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}}",
            "transcription": "={{$node[\"Extract Invoice Data\"].json[\"transcription\"] || \"No transcription available\"}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "customer_name",
              "displayName": "customer_name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "customer_address",
              "displayName": "customer_address",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "job_description",
              "displayName": "job_description",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "materials_cost",
              "displayName": "materials_cost",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "labor_hours",
              "displayName": "labor_hours",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "labor_cost",
              "displayName": "labor_cost",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "subtotal",
              "displayName": "subtotal",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "gst_amount",
              "displayName": "gst_amount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "total_amount",
              "displayName": "total_amount",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "document_type",
              "displayName": "document_type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Invoice",
                  "value": "Invoice"
                },
                {
                  "name": "Quote",
                  "value": "Quote"
                },
                {
                  "name": "Job Note",
                  "value": "Job Note"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "transcription",
              "displayName": "transcription",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "date_created",
              "displayName": "date_created",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        784,
        0
      ],
      "id": "4a95f558-0b1e-4d0d-a065-54d970f7cce1",
      "name": "Save To Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "Fo2VVzgfvkbiEFBT",
          "name": "Airtable Personal Access Token account 2"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": true,\n  \"message\": \"Voice processed successfully\",\n  \"data\": {\n    \"transcription\": \"{{$node['Code1'].json['transcription']}}\",\n    \"customer_name\": \"{{$node['Code1'].json['extracted_data']['customer_name']}}\",\n    \"customer_address\": \"{{$node['Code1'].json['extracted_data']['customer_address']}}\",\n    \"job_description\": \"{{$node['Code1'].json['extracted_data']['job_description']}}\",\n    \"materials_cost\": \"{{$node['Code1'].json['extracted_data']['materials_cost']}}\",\n    \"labor_hours\": \"{{$node['Code1'].json['extracted_data']['labor_hours']}}\",\n    \"labor_cost\": \"{{$node['Code1'].json['extracted_data']['labor_cost']}}\",\n    \"subtotal\": \"{{$node['Code1'].json['extracted_data']['subtotal']}}\",\n    \"gst_amount\": \"{{$node['Code1'].json['extracted_data']['gst_amount']}}\",\n    \"total_amount\": \"{{$node['Code1'].json['extracted_data']['total_amount']}}\",\n    \"document_type\": \"{{$node['Code1'].json['extracted_data']['document_type']}}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        944,
        0
      ],
      "id": "28a34b09-48cc-40cb-867a-2670657b3207",
      "name": "Send Response - Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "Receive Voice Recording - Webhook": {
      "main": [
        [
          {
            "node": "Process Audio Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Audio Input": {
      "main": [
        [
          {
            "node": "Convert Speech To Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Speech To Text": {
      "main": [
        [
          {
            "node": "Extract Invoice Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Invoice Data": {
      "main": [
        [
          {
            "node": "Save To Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save To Airtable": {
      "main": [
        [
          {
            "node": "Send Response - Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Response - Respond to Webhook": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "edbf473a-ff29-4da7-a211-ddcf7e315f64",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b02c6d6bdac1715a7427651b479af9449541e602e88ea383a2ea76ff3273088f"
  },
  "id": "YATFffQ8tyUuzhrQ",
  "tags": []
}